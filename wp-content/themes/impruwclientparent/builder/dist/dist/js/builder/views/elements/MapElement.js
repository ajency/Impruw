// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['builderelement', 'tpl!builder/templates/elements/BasicElement.tpl', 'global'], function(BuilderElement, template, global) {
    var MapElement, _ref;
    return MapElement = (function(_super) {
      __extends(MapElement, _super);

      function MapElement() {
        _ref = MapElement.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      MapElement.prototype.className = 'aj-imp-elem-map element ';

      MapElement.prototype.template = template;

      MapElement.prototype.elementType = 'MapElement';

      MapElement.prototype.events = {
        'mouseenter': 'elementMouseEnter',
        'mouseleave': 'elementMouseLeave',
        'click > .aj-imp-delete-btn': 'destroyElement',
        'contextmenu': 'showContextMenu'
      };

      MapElement.prototype.initialize = function(options) {
        if (options == null) {
          options = {};
        }
        if (_.isUndefined(options.config)) {
          this.id = this.type() + '-' + global.generateRandomId();
          this.$el.attr('id', this.id);
        } else {
          this.setProperties(options.config);
        }
        this.generateMarkup({
          icon: '',
          name: 'Map Element'
        });
        this.setContextMenu();
      };

      return MapElement;

    })(BuilderElement);
  });

}).call(this);
