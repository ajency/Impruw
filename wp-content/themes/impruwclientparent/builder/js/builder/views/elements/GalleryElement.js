// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['builderelement', 'tpl!builder/templates/elements/BasicElement.tpl', 'global'], function(BuilderElement, template, global) {
    var GalleryElement, _ref;
    return GalleryElement = (function(_super) {
      __extends(GalleryElement, _super);

      function GalleryElement() {
        _ref = GalleryElement.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      GalleryElement.prototype.className = 'aj-imp-elem-gallery element ';

      GalleryElement.prototype.template = template;

      GalleryElement.prototype.elementType = 'GalleryElement';

      GalleryElement.prototype.dataSource = 0;

      GalleryElement.prototype.events = {
        'mouseenter': 'elementMouseEnter',
        'mouseleave': 'elementMouseLeave',
        'click > .aj-imp-delete-btn': 'destroyElement',
        'click': 'showModal',
        'contextmenu': 'showContextMenu'
      };

      GalleryElement.prototype.initialize = function(options) {
        if (options == null) {
          options = {};
        }
        if (_.isUndefined(options.config)) {
          this.id = this.type() + '-' + global.generateRandomId();
          this.$el.attr('id', this.id);
        } else {
          this.setProperties(options.config);
        }
        this.generateMarkup({
          icon: '',
          name: 'Gallery Element'
        });
        this.setContextMenu();
      };

      GalleryElement.prototype.createGallery = function(images) {
        var ids;
        if (images.length === 0) {
          return false;
        }
        ids = _.map(images, function(image, index) {
          return image.get('id');
        });
        return this.dataSource = ids;
      };

      GalleryElement.prototype.showModal = function() {
        var sliderModal;
        sliderModal = _.bind(function(_, SliderManager) {
          var slidermanager;
          slidermanager = SiteBuilder.ViewManager.findByCustom("slider-manager");
          if (_.isUndefined(slidermanager)) {
            slidermanager = new SliderManager();
            SiteBuilder.ViewManager.add(slidermanager, "slider-manager");
          }
          this.listenTo(SiteBuilder.vent, "create-slider", this.createGallery);
          this.listenTo(SiteBuilder.vent, "modal-closed", this.stopListeningEvents);
          return slidermanager.open();
        }, this);
        return require(["underscore", "slidermanager"], sliderModal);
      };

      /*
      		Stop listening to modal events
      		@return {[type]} [description]
      */


      GalleryElement.prototype.stopListeningEvents = function(modal) {
        this.stopListening(SiteBuilder.vent, "create-slider", this.createGallery);
        return this.stopListening(SiteBuilder.vent, "modal-closed", this.stopListeningEvents);
      };

      return GalleryElement;

    })(BuilderElement);
  });

}).call(this);
