// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['builder/views/modals/Modal', 'tpl!builder/templates/modal/chooseroom.tpl', 'rooms', 'roomsview', 'global'], function(Modal, template, Rooms, RoomsView, global) {
    var ChooseRoom, _ref;
    return ChooseRoom = (function(_super) {
      __extends(ChooseRoom, _super);

      function ChooseRoom() {
        _ref = ChooseRoom.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      ChooseRoom.prototype.id = 'choose-room';

      ChooseRoom.prototype.template = template;

      ChooseRoom.prototype.initialize = function(options) {
        var html, markup, roomsview;
        if (options == null) {
          options = {};
        }
        html = this.outerTemplate({
          title: 'Choose Room'
        });
        this.$el.html(html);
        $('body').append(this.$el);
        this.$el.modal();
        markup = this.template();
        this.$el.find('.modal-content').append(markup);
        this.rooms = new Rooms.RoomCollection();
        this.rooms.fetch({
          reset: true
        });
        roomsview = new RoomsView({
          collection: this.rooms
        });
        this.$el.find('.modal-body').html(roomsview.$el);
        return this.listenTo(getAppInstance().vent, 'room-selected', this.hide);
      };

      return ChooseRoom;

    })(Modal);
  });

}).call(this);
