// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['app', 'text!apps/menu-manager/show/templates/menumanager.html', 'text!apps/menu-manager/show/templates/menuitem.html'], function(App, menumanagerTpl, menuItemTpl) {
    return App.module('MenuManager.Show.Views', function(Views, App) {
      var MenuItemView, _ref, _ref1;
      MenuItemView = (function(_super) {
        __extends(MenuItemView, _super);

        function MenuItemView() {
          _ref = MenuItemView.__super__.constructor.apply(this, arguments);
          return _ref;
        }

        MenuItemView.prototype.template = menuItemTpl;

        return MenuItemView;

      })(Marionette.ItemView);
      return Views.ManagerView = (function(_super) {
        __extends(ManagerView, _super);

        function ManagerView() {
          _ref1 = ManagerView.__super__.constructor.apply(this, arguments);
          return _ref1;
        }

        ManagerView.prototype.template = menumanagerTpl;

        ManagerView.prototype.itemView = MenuItemView;

        ManagerView.prototype.itemViewContainer = 'ol.sortable-menu-items';

        ManagerView.prototype.onRender1 = function() {
          return this.$itemViewContainer.nestedSortable({
            handle: '.menu-drag-handle',
            items: 'li.menu-item'
          });
        };

        return ManagerView;

      })(Marionette.CompositeView);
    });
  });

}).call(this);
