// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['app', 'tpl!apps/builder/elementsbox/show/templates/main', 'tpl!apps/builder/elementsbox/show/templates/singleelement', 'tpl!apps/builder/elementsbox/show/templates/error'], function(App, mainviewTpl, singleEleTpl, errorTpl) {
    App.module('ElementsBoxApp.Show.Views', function(Views, App, Backbone, Marionette, $, _) {
      var _ref, _ref1, _ref2;
      Views.SingleElement = (function(_super) {
        __extends(SingleElement, _super);

        function SingleElement() {
          _ref = SingleElement.__super__.constructor.apply(this, arguments);
          return _ref;
        }

        SingleElement.prototype.template = singleEleTpl;

        return SingleElement;

      })(Marionette.ItemView);
      Views.ErrorView = (function(_super) {
        __extends(ErrorView, _super);

        function ErrorView() {
          _ref1 = ErrorView.__super__.constructor.apply(this, arguments);
          return _ref1;
        }

        ErrorView.prototype.template = errorTpl;

        return ErrorView;

      })(Marionette.ItemView);
      return Views.MainView = (function(_super) {
        __extends(MainView, _super);

        function MainView() {
          _ref2 = MainView.__super__.constructor.apply(this, arguments);
          return _ref2;
        }

        MainView.prototype.template = mainviewTpl;

        MainView.prototype.className = 'aj-imp-drag-menu';

        MainView.prototype.id = 'controls-drag';

        MainView.prototype.itemView = Views.SingleElement;

        MainView.prototype.itemViewContainer = 'ul.aj-imp-builder-items';

        MainView.prototype.onShow = function() {
          this.$el.draggable({
            handle: "p.desc",
            addClasses: false
          });
          return this._setDraggableElements();
        };

        MainView.prototype._setDraggableElements = function() {
          return this.$el.find('*[data-element]').draggable({
            connectToSortable: '.droppable-column',
            helper: 'clone',
            delay: 5,
            addClasses: false,
            distance: 5,
            revert: 'invalid'
          });
        };

        return MainView;

      })(Marionette.CompositeView);
    });
    return App.ElementsBoxApp.Show.Views;
  });

}).call(this);
