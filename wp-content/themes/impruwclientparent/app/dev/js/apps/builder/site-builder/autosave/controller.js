// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['app'], function(App) {
    App.module('SiteBuilderApp.AutoSave', function(AutoSave, App, Backbone, Marionette, $, _) {
      var _ref;
      return AutoSave.Controller = (function(_super) {
        __extends(Controller, _super);

        function Controller() {
          _ref = Controller.__super__.constructor.apply(this, arguments);
          return _ref;
        }

        Controller.prototype.initialize = function(opt) {
          if (opt == null) {
            opt = {};
          }
        };

        Controller.prototype.autoSave = function() {
          var options, siteRegion, _json, _page_id;
          siteRegion = App.builderRegion.$el.find('#aj-imp-builder-drag-drop');
          _json = this._getPageJson(siteRegion);
          if (!_.isObject(_json)) {
            throw new Error("invalid json...");
          }
          _page_id = App.request("get:current:editable:page");
          options = {
            type: 'POST',
            url: AJAXURL,
            data: {
              action: 'save-page-json',
              json: JSON.stringify(_json),
              page_id: _page_id
            }
          };
          return $.ajax(options).done(function(response) {
            return console.log(response);
          }).fail(function(resp) {
            return console.log('error');
          });
        };

        Controller.prototype._getPageJson = function($site) {
          var json;
          json = {
            header: this._getJson($site.find('#site-header-region')),
            page: this._getJson($site.find('#site-page-content-region')),
            footer: this._getJson($site.find('#site-footer-region'))
          };
          console.log(json);
          return json;
        };

        Controller.prototype._getJson = function($element, arr) {
          var elements,
            _this = this;
          if (arr == null) {
            arr = [];
          }
          elements = $element.children('.element-wrapper');
          _.each(elements, function(element, index) {
            var ele;
            ele = {
              type: $(element).find('form input[name="element"]').val(),
              meta_id: parseInt($(element).find('form input[name="meta_id"]').val())
            };
            if (ele.type === 'Row') {
              _.each($(element).find('.column'), function(column, index) {
                ele["col-" + (index + 1)] = _this._getJson($(column));
              });
            }
            return arr.push(ele);
          });
          return arr;
        };

        return Controller;

      })(Marionette.Controller);
    });
    return App.SiteBuilderApp.AutoSave.Controller;
  });

}).call(this);
