// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['app', 'holder'], function(App, Holder) {
    return App.module('SiteBuilderApp.Element.Image.Views', function(Views, App, Backbone, Marionette, $, _) {
      var _ref;
      return Views.ImageView = (function(_super) {
        __extends(ImageView, _super);

        function ImageView() {
          _ref = ImageView.__super__.constructor.apply(this, arguments);
          return _ref;
        }

        ImageView.prototype.className = 'image';

        ImageView.prototype.template = '<img {{holder}}src="{{imageurl}}" alt="{{title}}" class="{{alignclass}} img-responsive"/>';

        ImageView.prototype.mixinTemplateHelpers = function(data) {
          data = ImageView.__super__.mixinTemplateHelpers.call(this, data);
          data.holder = '';
          if (this.model.isNew()) {
            data.holder = 'data-';
            data.imageurl = function() {
              return this.url;
            };
          } else {
            if (!data.sizes[data.size]) {
              data.size = _.chain(_.keys(data.sizes)).first().value();
            }
            data.imageurl = function() {
              return this.sizes[this.size].url;
            };
            data.alignclass = function() {
              switch (this.alignment) {
                case 'left':
                  return 'pull-left';
                case 'right':
                  return 'pull-right';
              }
            };
          }
          return data;
        };

        ImageView.prototype.events = {
          'click': function(e) {
            e.stopPropagation();
            return this.trigger("show:media:manager");
          }
        };

        ImageView.prototype.onShow = function() {
          if (this.model.isNew()) {
            Holder.run();
            this.$el.find('img').removeAttr('data-src');
          }
          return this.$el.height(this.$el.find('img').height());
        };

        return ImageView;

      })(Marionette.ItemView);
    });
  });

}).call(this);
