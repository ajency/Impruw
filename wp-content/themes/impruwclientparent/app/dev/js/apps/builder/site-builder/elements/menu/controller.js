// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['app', 'apps/builder/site-builder/elements/menu/views'], function(App) {
    return App.module('SiteBuilderApp.Element.Menu', function(Menu, App, Backbone, Marionette, $, _) {
      var _ref;
      return Menu.Controller = (function(_super) {
        __extends(Controller, _super);

        function Controller() {
          _ref = Controller.__super__.constructor.apply(this, arguments);
          return _ref;
        }

        Controller.prototype.initialize = function(options) {
          if (options == null) {
            options = {};
          }
          return Controller.__super__.initialize.call(this, options);
        };

        Controller.prototype._getMenuView = function(templates, menu, menuItems) {
          return window.v = new Menu.Views.MenuView({
            model: menu,
            collection: menuItems,
            templates: templates
          });
        };

        Controller.prototype.setupViews = function() {
          var menu, menuItems, menuView, _ref1;
          menu = App.request("create:menu:model", this.view.model.get('menu'));
          menuItems = App.request("create:menuitem:collection", this.view.model.get('menu_items'));
          menuView = this._getMenuView((_ref1 = this.view.model.get('templates')) != null ? _ref1 : {}, menu, menuItems);
          return this.addElementMarkup(menuView);
        };

        return Controller;

      })(App.SiteBuilderApp.Element.Controller);
    });
  });

}).call(this);
