// Generated by CoffeeScript 1.6.3
(function() {
  var API, UserCollection, UserModel, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["app", 'backbone'], function(App, Backbone) {
    return App.module("Entities.Users", function(Users, App) {});
  });

  UserModel = (function(_super) {
    __extends(UserModel, _super);

    function UserModel() {
      _ref = UserModel.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    UserModel.prototype.relations = [
      {
        type: Backbone.HasMany,
        key: 'rooms',
        relatedModel: 'App.Entities.Rooms.Room'
      }
    ];

    return UserModel;

  })(Backbone.Model);

  UserCollection = (function(_super) {
    __extends(UserCollection, _super);

    function UserCollection() {
      _ref1 = UserCollection.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    UserCollection.prototype.model = UserModel;

    return UserCollection;

  })(Backbone.Collection);

  API = {
    getUserProfile: function(userId) {
      var user;
      user = new UserModel({
        id: userId
      });
      user.url = AJAXURL + '?action=get-user-profile';
      user.fetch;
      return user;
    }
  };

  App.reqres.setHandler("get:user:profile", function(options) {
    var userId;
    if (options == null) {
      options = {};
    }
    userId = options.userId;
    return API.getUserProfile(userId);
  });

}).call(this);
