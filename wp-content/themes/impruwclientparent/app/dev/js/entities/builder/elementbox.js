// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["app", 'backbone'], function(App, Backbone) {
    return App.module("Entities.ElementBox", function(ElementBox, App, Backbone, Marionette, $, _) {
      var API, _ref, _ref1;
      ElementBox.ElementModel = (function(_super) {
        __extends(ElementModel, _super);

        function ElementModel() {
          _ref = ElementModel.__super__.constructor.apply(this, arguments);
          return _ref;
        }

        return ElementModel;

      })(Backbone.Model);
      ElementBox.ElementCollection = (function(_super) {
        __extends(ElementCollection, _super);

        function ElementCollection() {
          _ref1 = ElementCollection.__super__.constructor.apply(this, arguments);
          return _ref1;
        }

        ElementCollection.prototype.model = ElementBox.ElementModel;

        ElementCollection.prototype.regularElements = function() {
          return this.where({
            type: 'regular'
          });
        };

        ElementCollection.prototype.roomElements = function() {
          return this.where({
            type: 'room'
          });
        };

        return ElementCollection;

      })(Backbone.Collection);
      API = {
        getElements: function(param) {
          var media;
          if (param == null) {
            param = {};
          }
          media = new ElementBox.ElementCollection;
          media.url = AJAXURL + '?action=get-elementbox-elements';
          media.fetch({
            reset: true,
            data: param
          });
          return media;
        }
      };
      return App.reqres.setHandler("get:elementbox:elements", function() {
        return API.getElements();
      });
    });
  });

}).call(this);
