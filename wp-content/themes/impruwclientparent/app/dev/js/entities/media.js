// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["app", 'backbone'], function(App, Backbone) {
    return App.module("Entities.Media", function(Media, App, Backbone, Marionette, $, _) {
      var API, _ref, _ref1;
      Media.MediaModel = (function(_super) {
        __extends(MediaModel, _super);

        function MediaModel() {
          _ref = MediaModel.__super__.constructor.apply(this, arguments);
          return _ref;
        }

        return MediaModel;

      })(Backbone.RelationalModel);
      Media.MediaCollection = (function(_super) {
        __extends(MediaCollection, _super);

        function MediaCollection() {
          _ref1 = MediaCollection.__super__.constructor.apply(this, arguments);
          return _ref1;
        }

        MediaCollection.prototype.model = Media.MediaModel;

        MediaCollection.prototype.url = function(models) {
          var ids, media, _i, _len;
          if (models == null) {
            models = [];
          }
          if (models.length === 0) {
            return "" + AJAXURL + "?action=media";
          } else {
            ids = [];
            for (_i = 0, _len = models.length; _i < _len; _i++) {
              media = models[_i];
              ids.push(media.get('ID'));
            }
            ids = ids.join();
            return "" + AJAXURL + "?action=media&ids=" + ids;
          }
        };

        return MediaCollection;

      })(Backbone.Collection);
      API = {
        getMedia: function(param) {
          var media;
          if (param == null) {
            param = {};
          }
          media = new Media.MediaCollection;
          media.fetch({
            reset: true,
            data: param
          });
          return media;
        }
      };
      return App.reqres.setHandler("get:media:entities", function() {
        return API.getMedia();
      });
    });
  });

}).call(this);
